<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://www.springframework.org/schema/beans"
xmlns:p="http://www.springframework.org/schema/p"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop"
xsi:schemaLocation="http://www.springframework.org/schema/beans
https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
http://www.springframework.org/schema/context
https://www.springframework.org/schema/context/spring-context-4.3.xsd
http://www.springframework.org/schema/aop
https://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<context:component-scan base-package="aop_p.webToon"/>
	<context:component-scan base-package="aop_p.adv"/>
	
	<aop:config>
		<!-- aop를 이용하여 메서드를 한 곳에서 처리 -->
		<!-- pointcut : 지점 설정 -->
		<!-- expression : 표현식 -->
		<!-- execAdvice1 -->
		<aop:aspect ref="execAdvice1">
			<!--around 아니고 before-->
			<aop:before method="retString" 
			pointcut="execution(public String aop_p.webToon..* (..))" />
			
			<aop:before method="paramInt" 
			pointcut="execution(public * aop_p.webToon..* (int, ..))" />
			
			<aop:pointcut id="dog" expression="execution(public * aop_p.webToon..dog* (..))" />
			<aop:before method="nameDog" 
			pointcut-ref="dog"/>
			
			<aop:pointcut id="classKang" expression="execution(public * aop_p.webToon.Kang*.* (..))" />
			<aop:after method="claKang" 
			pointcut-ref="classKang" />
			
			<aop:after method="endO" 
			pointcut="execution(public * aop_p.webToon.*.*o (..))" />
			
			<!-- AND | o로끝나고 KangBada로 시작하는 클래스 == KangBada.dokdo -->
			<aop:after method="oAndKang" 
			pointcut="execution(public * aop_p.webToon.*.*o (..)) and execution(public * aop_p.webToon.KangBada.* (..)) " />
			
			<!-- OR | o로 끝나거나 Jo로 시작하는 클래스 -->
			<aop:after method="oOrJo" 
			pointcut="execution(public * aop_p.webToon.*.*o (..)) or execution(public * aop_p.webToon.Jo*.* (..)) " />
			
			<!-- before : 메서드 실행 전 -->
			<!-- after : 메서드 실행 후 -->
		</aop:aspect>
		
		
		<!-- 똑같은거 두번 걸어도 상관 없음 (겹쳐도 그만 안겹쳐도 그만) -->
		<aop:aspect ref="execAdvice2">
			<!-- AND | o로끝나고 KangBada로 시작하는 클래스 == KangBada.dokdo -->
			<aop:after method="ok" 
			pointcut="execution(public * aop_p.webToon.*.*o (..)) and execution(public * aop_p.webToon.KangBada.* (..)) " />
			
			<!-- OR | o로 끝나거나 Jo로 시작하는 클래스 -->
			<aop:before method="oOrJo" 
			pointcut="execution(public * aop_p.webToon.*.*o (..)) or execution(public * aop_p.webToon.Jo*.* (..)) " />
		</aop:aspect>

		
		<aop:aspect ref="execAdvice3">
			<!-- execAdvice3에 있는 cirA -->
			<aop:after method="cirA" 
			pointcut="execution(* aop_p.webToon.Circle.*(..))" />
		</aop:aspect>
	</aop:config>
	
</beans>
